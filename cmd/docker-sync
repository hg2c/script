#!/usr/bin/env bash
import() {
    ssh $2 "docker save $1" | pv | docker load
}

export() {
    docker save $1 | pv | ssh $2 "docker load"
}

sync_image() {
    local TARGET=$1
    local IMAGE=$2

    set +o errexit
    LOCAL=$(docker inspect -f '{{ .Created }}' $IMAGE 2>/dev/null)
    REMOTE=$(ssh $TARGET "docker inspect -f '{{ .Created }}' $IMAGE 2>/dev/null")
    set -o errexit

    if [[ "${REMOTE}" == "" ]]; then
        if [[ "${LOCAL}" == "" ]]; then
            echo "ERR : can't find $IMAGE on localhost or ${TARGET}"
            return
        fi

        echo "==> : ${IMAGE}@localhost ($LOCAL) ==> ${TARGET}"
        export $IMAGE $TARGET
        return
    else
        if [[ "${LOCAL}" == "" ]]; then
            echo "<== : localhost <== ${IMAGE}@${TARGET} ($REMOTE)"
            import $IMAGE $TARGET
            return
        fi
    fi


    if [[ "$LOCAL" == "$REMOTE" ]]; then
        echo "    : ${IMAGE}@localhost ($LOCAL) === ${IMAGE}@${TARGET} ($REMOTE)"
        return
    else
        if [[ "$LOCAL" > "$REMOTE" ]]; then
            echo "==> : ${IMAGE}@localhost ($LOCAL) ==> ${IMAGE}@${TARGET} ($REMOTE)"
            export $IMAGE $TARGET
            return
        else
            echo "<== : ${IMAGE}@localhost ($LOCAL) <== ${IMAGE}@${TARGET} ($REMOTE)"
            import $IMAGE $TARGET
            return
        fi
    fi
}

# TEST
# sync_image ub alpine
# sync_image ub java
# sync_image ub tensorflow/tensorflow:latest-gpu-py3
# sync_image ub jenkins/jenkins:lts
# sync_image ub jenkins/jenkins:lts1

# for i in $(<images)
# do
#     (
#         sync_image ub $i
#     )
# done

usage()
{
    echo "Usage:  $0 host image-name "
    echo
    echo "Sample: $0 ub busybox"
    exit 1
}

if [ $# -ne 2 ] ; then
    usage
fi

sync_image $1 $2
# cat images | xargs -I % ./hg2c-sync ub %
# docker images --format "{{.Repository}}:{{.Tag}}" | xargs -I % ./cmd/docker-sync cq03.huwo.io %

# docker save <image> | bzip2 | pv | \
    #     ssh user@host 'bunzip2 | docker load'
